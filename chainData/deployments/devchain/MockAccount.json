{
  "address": "0xa288bBF3cdC895c32e2c693885923FBfd36B0874",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getCeloForGroup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastScheduledVotes",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastScheduledWithdrawals",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalCelo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastVotedGroups",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastWithdrawalBeneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastWithdrawnGroups",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "groups",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "votes",
          "type": "uint256[]"
        }
      ],
      "name": "scheduleVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "groups",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "withdrawals",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "scheduleWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "scheduledVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "group",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setCeloForGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "group",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setScheduledVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setTotalCelo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf8ede9626ae6fba238f325580bdcec6bf9797c6c2ba4f3d281f9865561008669",
  "receipt": {
    "to": null,
    "from": "0x5409ED021D9299bf6814279A6A1411A7e866A631",
    "contractAddress": "0xa288bBF3cdC895c32e2c693885923FBfd36B0874",
    "transactionIndex": 0,
    "gasUsed": "863662",
    "logsBloom": "0x
    "blockHash": "0x75c814031f5496c0e963ec19d4a33c2852ceee7bbd667d857f64a58d9bc9dedc",
    "transactionHash": "0xf8ede9626ae6fba238f325580bdcec6bf9797c6c2ba4f3d281f9865561008669",
    "logs": [],
    "blockNumber": 779,
    "cumulativeGasUsed": "863662",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4814d6b8a8394fe8b363a892b6618b21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getCeloForGroup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastScheduledVotes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastScheduledWithdrawals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCelo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastVotedGroups\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastWithdrawalBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastWithdrawnGroups\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"groups\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"}],\"name\":\"scheduleVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"groups\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawals\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"scheduleWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"scheduledVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setCeloForGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setScheduledVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalCelo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a simple mock exposing the Manager-facing Account API as simple functions that 1. Record their arguments for functions called by Manager. 2. Can have their output mocked for functions read by Manager.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockAccount.sol\":\"MockAccount\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mock/MockAccount.sol\":{\"content\":\"//SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.11;\\n\\n/**\\n * @notice This is a simple mock exposing the Manager-facing Account API as\\n * simple functions that\\n * 1. Record their arguments for functions called by Manager.\\n * 2. Can have their output mocked for functions read by Manager.\\n */\\ncontract MockAccount {\\n    address[] public lastVotedGroups;\\n    uint256[] public lastVotes;\\n\\n    address[] public lastWithdrawnGroups;\\n    uint256[] public lastWithdrawals;\\n    address public lastWithdrawalBeneficiary;\\n\\n    mapping(address => uint256) public getCeloForGroup;\\n    uint256 public getTotalCelo;\\n\\n    mapping(address => uint256) public scheduledVotes;\\n\\n    function scheduleVotes(address[] calldata groups, uint256[] calldata votes) external payable {\\n        lastVotedGroups = groups;\\n        lastVotes = votes;\\n    }\\n\\n    function getLastScheduledVotes() external view returns (address[] memory, uint256[] memory) {\\n        return (lastVotedGroups, lastVotes);\\n    }\\n\\n    function scheduleWithdrawals(\\n        address[] calldata groups,\\n        uint256[] calldata withdrawals,\\n        address beneficiary\\n    ) external {\\n        lastWithdrawnGroups = groups;\\n        lastWithdrawals = withdrawals;\\n        lastWithdrawalBeneficiary = beneficiary;\\n    }\\n\\n    function getLastScheduledWithdrawals()\\n        external\\n        view\\n        returns (\\n            address[] memory,\\n            uint256[] memory,\\n            address\\n        )\\n    {\\n        return (lastWithdrawnGroups, lastWithdrawals, lastWithdrawalBeneficiary);\\n    }\\n\\n    function setCeloForGroup(address group, uint256 amount) external {\\n        getCeloForGroup[group] = amount;\\n    }\\n\\n    function setTotalCelo(uint256 amount) external {\\n        getTotalCelo = amount;\\n    }\\n\\n    function setScheduledVotes(address group, uint256 amount) external {\\n        scheduledVotes[group] = amount;\\n    }\\n}\\n\",\"keccak256\":\"0xdec36e12560687778309f6854064af806b437499be845adf1c64048b3c88e109\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610eab806100206000396000f3fe6080604052600436106100e85760003560e01c806364b3b2731161008a578063c90266e911610059578063c90266e91461030b578063d8fa490f14610337578063e25bb3be14610364578063ed411e9c1461038d576100e8565b806364b3b27314610217578063acd201d014610254578063bb23144714610291578063bb688018146102ce576100e8565b806339e1386f116100c657806339e1386f1461015d57806341dbf2681461019a57806344cdc069146101c357806356369656146101ee576100e8565b806301c21d59146100ed57806301d2b6ea146101095780632ff3860614610134575b600080fd5b610107600480360381019061010291906109e5565b6103ca565b005b34801561011557600080fd5b5061011e6103f4565b60405161012b9190610a7f565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610b24565b6103fa565b005b34801561016957600080fd5b50610184600480360381019061017f9190610b64565b610442565b6040516101919190610a7f565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc9190610b24565b61045a565b005b3480156101cf57600080fd5b506101d86104a2565b6040516101e59190610ba0565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190610bbb565b6104c8565b005b34801561022357600080fd5b5061023e60048036038101906102399190610c50565b610534565b60405161024b9190610a7f565b60405180910390f35b34801561026057600080fd5b5061027b60048036038101906102769190610b64565b610558565b6040516102889190610a7f565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190610c50565b610570565b6040516102c59190610ba0565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f09190610c50565b6105af565b6040516103029190610a7f565b60405180910390f35b34801561031757600080fd5b506103206105d3565b60405161032e929190610df9565b60405180910390f35b34801561034357600080fd5b5061034c6106bc565b60405161035b93929190610e30565b60405180910390f35b34801561037057600080fd5b5061038b60048036038101906103869190610c50565b6107cd565b005b34801561039957600080fd5b506103b460048036038101906103af9190610c50565b6107d7565b6040516103c19190610ba0565b60405180910390f35b8383600091906103db929190610816565b508181600191906103ed9291906108b6565b5050505050565b60065481565b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60076020528060005260406000206000915090505481565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8484600291906104d9929190610816565b508282600391906104eb9291906108b6565b5080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6001818154811061054457600080fd5b906000526020600020016000915090505481565b60056020528060005260406000206000915090505481565b6002818154811061058057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106105bf57600080fd5b906000526020600020016000915090505481565b606080600060018180548060200260200160405190810160405280929190818152602001828054801561065b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610611575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b815481526020019060010190808311610699575b50505050509050915091509091565b606080600060026003600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168280548060200260200160405190810160405280929190818152602001828054801561076957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161071f575b50505050509250818054806020026020016040519081016040528092919081815260200182805480156107bb57602002820191906000526020600020905b8154815260200190600101908083116107a7575b50505050509150925092509250909192565b8060068190555050565b600081815481106107e757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8280548282559060005260206000209081019282156108a5579160200282015b828111156108a457823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610836565b5b5090506108b29190610903565b5090565b8280548282559060005260206000209081019282156108f2579160200282015b828111156108f15782358255916020019190600101906108d6565b5b5090506108ff9190610903565b5090565b5b8082111561091c576000816000905550600101610904565b5090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261094f5761094e61092a565b5b8235905067ffffffffffffffff81111561096c5761096b61092f565b5b60208301915083602082028301111561098857610987610934565b5b9250929050565b60008083601f8401126109a5576109a461092a565b5b8235905067ffffffffffffffff8111156109c2576109c161092f565b5b6020830191508360208202830111156109de576109dd610934565b5b9250929050565b600080600080604085870312156109ff576109fe610920565b5b600085013567ffffffffffffffff811115610a1d57610a1c610925565b5b610a2987828801610939565b9450945050602085013567ffffffffffffffff811115610a4c57610a4b610925565b5b610a588782880161098f565b925092505092959194509250565b6000819050919050565b610a7981610a66565b82525050565b6000602082019050610a946000830184610a70565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac582610a9a565b9050919050565b610ad581610aba565b8114610ae057600080fd5b50565b600081359050610af281610acc565b92915050565b610b0181610a66565b8114610b0c57600080fd5b50565b600081359050610b1e81610af8565b92915050565b60008060408385031215610b3b57610b3a610920565b5b6000610b4985828601610ae3565b9250506020610b5a85828601610b0f565b9150509250929050565b600060208284031215610b7a57610b79610920565b5b6000610b8884828501610ae3565b91505092915050565b610b9a81610aba565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b600080600080600060608688031215610bd757610bd6610920565b5b600086013567ffffffffffffffff811115610bf557610bf4610925565b5b610c0188828901610939565b9550955050602086013567ffffffffffffffff811115610c2457610c23610925565b5b610c308882890161098f565b93509350506040610c4388828901610ae3565b9150509295509295909350565b600060208284031215610c6657610c65610920565b5b6000610c7484828501610b0f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cb281610aba565b82525050565b6000610cc48383610ca9565b60208301905092915050565b6000602082019050919050565b6000610ce882610c7d565b610cf28185610c88565b9350610cfd83610c99565b8060005b83811015610d2e578151610d158882610cb8565b9750610d2083610cd0565b925050600181019050610d01565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d7081610a66565b82525050565b6000610d828383610d67565b60208301905092915050565b6000602082019050919050565b6000610da682610d3b565b610db08185610d46565b9350610dbb83610d57565b8060005b83811015610dec578151610dd38882610d76565b9750610dde83610d8e565b925050600181019050610dbf565b5085935050505092915050565b60006040820190508181036000830152610e138185610cdd565b90508181036020830152610e278184610d9b565b90509392505050565b60006060820190508181036000830152610e4a8186610cdd565b90508181036020830152610e5e8185610d9b565b9050610e6d6040830184610b91565b94935050505056fea264697066735822122055b0f2e2c1df31fb271c98c1c547e5eb7007e10cabaa76b10f43764802121a2264736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c806364b3b2731161008a578063c90266e911610059578063c90266e91461030b578063d8fa490f14610337578063e25bb3be14610364578063ed411e9c1461038d576100e8565b806364b3b27314610217578063acd201d014610254578063bb23144714610291578063bb688018146102ce576100e8565b806339e1386f116100c657806339e1386f1461015d57806341dbf2681461019a57806344cdc069146101c357806356369656146101ee576100e8565b806301c21d59146100ed57806301d2b6ea146101095780632ff3860614610134575b600080fd5b610107600480360381019061010291906109e5565b6103ca565b005b34801561011557600080fd5b5061011e6103f4565b60405161012b9190610a7f565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610b24565b6103fa565b005b34801561016957600080fd5b50610184600480360381019061017f9190610b64565b610442565b6040516101919190610a7f565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc9190610b24565b61045a565b005b3480156101cf57600080fd5b506101d86104a2565b6040516101e59190610ba0565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190610bbb565b6104c8565b005b34801561022357600080fd5b5061023e60048036038101906102399190610c50565b610534565b60405161024b9190610a7f565b60405180910390f35b34801561026057600080fd5b5061027b60048036038101906102769190610b64565b610558565b6040516102889190610a7f565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190610c50565b610570565b6040516102c59190610ba0565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f09190610c50565b6105af565b6040516103029190610a7f565b60405180910390f35b34801561031757600080fd5b506103206105d3565b60405161032e929190610df9565b60405180910390f35b34801561034357600080fd5b5061034c6106bc565b60405161035b93929190610e30565b60405180910390f35b34801561037057600080fd5b5061038b60048036038101906103869190610c50565b6107cd565b005b34801561039957600080fd5b506103b460048036038101906103af9190610c50565b6107d7565b6040516103c19190610ba0565b60405180910390f35b8383600091906103db929190610816565b508181600191906103ed9291906108b6565b5050505050565b60065481565b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60076020528060005260406000206000915090505481565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8484600291906104d9929190610816565b508282600391906104eb9291906108b6565b5080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6001818154811061054457600080fd5b906000526020600020016000915090505481565b60056020528060005260406000206000915090505481565b6002818154811061058057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106105bf57600080fd5b906000526020600020016000915090505481565b606080600060018180548060200260200160405190810160405280929190818152602001828054801561065b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610611575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b815481526020019060010190808311610699575b50505050509050915091509091565b606080600060026003600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168280548060200260200160405190810160405280929190818152602001828054801561076957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161071f575b50505050509250818054806020026020016040519081016040528092919081815260200182805480156107bb57602002820191906000526020600020905b8154815260200190600101908083116107a7575b50505050509150925092509250909192565b8060068190555050565b600081815481106107e757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8280548282559060005260206000209081019282156108a5579160200282015b828111156108a457823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610836565b5b5090506108b29190610903565b5090565b8280548282559060005260206000209081019282156108f2579160200282015b828111156108f15782358255916020019190600101906108d6565b5b5090506108ff9190610903565b5090565b5b8082111561091c576000816000905550600101610904565b5090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261094f5761094e61092a565b5b8235905067ffffffffffffffff81111561096c5761096b61092f565b5b60208301915083602082028301111561098857610987610934565b5b9250929050565b60008083601f8401126109a5576109a461092a565b5b8235905067ffffffffffffffff8111156109c2576109c161092f565b5b6020830191508360208202830111156109de576109dd610934565b5b9250929050565b600080600080604085870312156109ff576109fe610920565b5b600085013567ffffffffffffffff811115610a1d57610a1c610925565b5b610a2987828801610939565b9450945050602085013567ffffffffffffffff811115610a4c57610a4b610925565b5b610a588782880161098f565b925092505092959194509250565b6000819050919050565b610a7981610a66565b82525050565b6000602082019050610a946000830184610a70565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac582610a9a565b9050919050565b610ad581610aba565b8114610ae057600080fd5b50565b600081359050610af281610acc565b92915050565b610b0181610a66565b8114610b0c57600080fd5b50565b600081359050610b1e81610af8565b92915050565b60008060408385031215610b3b57610b3a610920565b5b6000610b4985828601610ae3565b9250506020610b5a85828601610b0f565b9150509250929050565b600060208284031215610b7a57610b79610920565b5b6000610b8884828501610ae3565b91505092915050565b610b9a81610aba565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b600080600080600060608688031215610bd757610bd6610920565b5b600086013567ffffffffffffffff811115610bf557610bf4610925565b5b610c0188828901610939565b9550955050602086013567ffffffffffffffff811115610c2457610c23610925565b5b610c308882890161098f565b93509350506040610c4388828901610ae3565b9150509295509295909350565b600060208284031215610c6657610c65610920565b5b6000610c7484828501610b0f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cb281610aba565b82525050565b6000610cc48383610ca9565b60208301905092915050565b6000602082019050919050565b6000610ce882610c7d565b610cf28185610c88565b9350610cfd83610c99565b8060005b83811015610d2e578151610d158882610cb8565b9750610d2083610cd0565b925050600181019050610d01565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d7081610a66565b82525050565b6000610d828383610d67565b60208301905092915050565b6000602082019050919050565b6000610da682610d3b565b610db08185610d46565b9350610dbb83610d57565b8060005b83811015610dec578151610dd38882610d76565b9750610dde83610d8e565b925050600181019050610dbf565b5085935050505092915050565b60006040820190508181036000830152610e138185610cdd565b90508181036020830152610e278184610d9b565b90509392505050565b60006060820190508181036000830152610e4a8186610cdd565b90508181036020830152610e5e8185610d9b565b9050610e6d6040830184610b91565b94935050505056fea264697066735822122055b0f2e2c1df31fb271c98c1c547e5eb7007e10cabaa76b10f43764802121a2264736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This is a simple mock exposing the Manager-facing Account API as simple functions that 1. Record their arguments for functions called by Manager. 2. Can have their output mocked for functions read by Manager.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9147,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "lastVotedGroups",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 9150,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "lastVotes",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 9153,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "lastWithdrawnGroups",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 9156,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "lastWithdrawals",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 9158,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "lastWithdrawalBeneficiary",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9162,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "getCeloForGroup",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9164,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "getTotalCelo",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 9168,
        "contract": "contracts/mock/MockAccount.sol:MockAccount",
        "label": "scheduledVotes",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}